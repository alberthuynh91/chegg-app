{"version":3,"sources":["components/Repository.js","utils.js","components/Repositories.js","components/Issue.js","components/Issues.js","components/images/spinner.gif","components/Spinner.js","components/ErrorMsg.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Repository","props","formData","url","selectedRepo","setSelectedRepo","setIssues","apiKey","repo","split","length","getRepoName","owner","getOwnerName","className","onClick","payload","fetch","then","res","ok","json","Error","data","catch","error","console","handleClick","Repositories","repositories","map","item","id","Issue","d","issue","issues","index","title","user","created_at","updated_at","avatar_url","created","moment","format","updated","fromNow","formatUpdatedDate","src","alt","cpIssues","updatedIndex","splice","Issues","Spinner","spinner","width","ErrorMsg","message","toString","Form","setFormData","handleSubmit","handleClear","type","value","onChange","event","formKey","target","handleChange","initialFormData","App","useState","setRepositories","undefined","setError","isFetching","setIsFetching","fetchRepos","finally","useEffect","cachedState","window","localStorage","getItem","state","JSON","parse","setItem","stringify","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84b71b45.chunk.js","sourcesContent":["import React from 'react'\nimport { getRepoName, getOwnerName } from '../utils'\n\nconst Repository = (props) => {\n  const { formData, url, selectedRepo, setSelectedRepo, setIssues,  } = props\n  const { apiKey } = formData\n  const repo = getRepoName(url)\n  const owner = getOwnerName(url)\n  const isSelectedRepo = url === selectedRepo\n  const className = isSelectedRepo ? `repository-item selected` : `repository-item`\n  \n  const handleClick = (payload) => {\n    setSelectedRepo(url)\n    const { owner, repo } = payload\n    fetch(`/api/git/issues?repo=${repo}&owner=${owner}&apiKey=${apiKey}`)\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          throw new Error('Not able to load issues for selected repository')\n        }\n      })\n      .then(({ data }) => {\n        setIssues(data)\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n  \n  return (\n    <div \n      className={className}\n      onClick={() => { \n        handleClick({ owner, repo }) \n      }}\n    >\n        {repo}\n    </div>\n  )\n}\n\nexport default Repository","import moment from 'moment'\n\nexport const getRepoName = (url) => {\n  const split = url.split(\"/\")\n  return split[split.length - 1]\n}\n\nexport const getOwnerName = (url) => {\n  const split = url.split(\"/\")\n  return split[split.length - 2]\n}\n\nexport const formatCreatedDate = (d) => {\n  return moment(d).format('DD/MM/YYYY');\n}\n\nexport const formatUpdatedDate = (d) => {\n  return moment(d).fromNow();\n}\n\nexport const isValidAuthKey = (authKey) => {\n  return authKey !== \"\" && authKey !== undefined\n}","import React from 'react'\nimport Repository from './Repository'\n\nconst Repositories = (props) => {\n  const { formData, repositories, setIssues, selectedRepo, setSelectedRepo } = props\n  return (\n    repositories?.length > 0 ? repositories?.map((item) => {\n      return (\n        <Repository\n          key={item.id}\n          {...item}\n          formData={formData}\n          setIssues={setIssues}\n          selectedRepo={selectedRepo}\n          setSelectedRepo={setSelectedRepo}\n        />\n      )\n    }) : null\n  )\n}\n\nexport default Repositories\n","import React from 'react'\nimport { formatCreatedDate, formatUpdatedDate } from '../utils'\n\nconst Issue = (props) => {\n  const { issue, issues, setIssues, index } = props\n  const { title, user, created_at, updated_at } = issue\n  const { avatar_url } = user\n  const created = formatCreatedDate(created_at)\n  const updated = formatUpdatedDate(updated_at)\n\n  const handleUp = () => {\n    const cpIssues = [...issues]\n    const updatedIndex = index === 0 ? index : index - 1 \n    cpIssues.splice(index, 1)\n    cpIssues.splice(updatedIndex, 0, issue)\n    setIssues(cpIssues)\n  }\n\n  const handleDown = () => {\n    const cpIssues = [...issues]\n    const updatedIndex = index === cpIssues.length - 1 ? index : index + 1\n    cpIssues.splice(index, 1)\n    cpIssues.splice(updatedIndex, 0, issue)\n    setIssues(cpIssues)\n  }\n\n  return (\n    <div className=\"issue-item\" onClick={() => {}}>\n      <div className=\"left\">\n        <div><img className=\"avatar\" src={avatar_url} alt=\"avatar\" /></div>\n        <div className=\"dates\">Created: {created}</div>\n        <div className=\"dates\">Last Updated: {updated}</div>\n      </div>\n      <div className=\"right\">\n        <span className=\"title\">{title}</span>\n        <span className=\"btn-container\">\n          <button onClick={handleUp}>▲</button>\n          <button onClick={handleDown}>▼</button>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Issue","import React from 'react'\nimport Issue from './Issue'\n\nconst Issues = (props) => {\n  const { issues, setIssues } = props\n  if (!issues) {\n    return null\n  }\n  return (\n    issues.length > 0 ? \n    issues.map((issue, index) => {\n      const { id } = issue\n      return (\n        <Issue\n          className=\"issues-container\"\n          key={id}\n          index={index}\n          issue={issue}\n          issues={issues}\n          setIssues={setIssues}\n        />\n      )}) \n      : \n      <div>No issues found for this repository</div>\n  )\n}\n\nexport default Issues","export default __webpack_public_path__ + \"static/media/spinner.c7d9f081.gif\";","import React from 'react'\nimport spinner from './images/spinner.gif'\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n      <img src={spinner} width=\"100px\" alt=\"spinner icon\" />\n    </div>\n  )\n}\n\nexport default Spinner","import React from 'react'\n\nconst ErrorMsg = (props) => {\n  const { message } = props\n  return (\n    message ? <div className=\"error-msg\">{message.toString()}</div> : null\n    \n  )\n}\n\nexport default ErrorMsg","import React from 'react'\nimport ErrorMsg from './ErrorMsg'\n\nconst Form = (props) => {\n  const { error, formData, setFormData, handleSubmit = () => {}, handleClear = () => {} } = props\n  const { apiKey } = formData\n\n  const handleChange = (event, formKey) => {\n    setFormData({ ...formData, [formKey]: event.target.value })\n  }\n  \n  return (\n    <div className=\"form-container\">\n      <form>\n        <label>\n          Enter Github API Key\n          <input type=\"text\" value={apiKey} onChange={(event) => handleChange(event, 'apiKey')}></input>\n        </label>\n      </form>\n      <button onClick={handleSubmit}>Submit</button>\n      <button onClick={handleClear}>Clear</button>\n      <ErrorMsg message={error} />\n    </div>\n  )\n}\n\nexport default Form","import React, {useState, useEffect} from 'react'\nimport Repositories from './components/Repositories'\nimport Issues from './components/Issues'\nimport Spinner from './components/Spinner'\nimport Form from './components/Form'\nimport './App.css';\n\nconst initialFormData = {\n  apiKey: ''\n}\n\nconst App = (props) => {\n  const [formData, setFormData] = useState(props.formData || initialFormData)\n  const [repositories, setRepositories] = useState(props.repositories || {})\n  const [selectedRepo, setSelectedRepo] = useState('')\n  const [issues, setIssues] = useState(props.issues || undefined)\n  const [error, setError] = useState(undefined)\n  const [isFetching, setIsFetching] = useState(false)\n\n  const fetchRepos = (apiKey) => {\n    if (apiKey !== '' && apiKey !== undefined) {\n      setIsFetching(true)\n      fetch(`/api/git?apiKey=${apiKey}`)\n        .then((res) => {\n          if (res.ok) {\n            return res.json()\n          } else {\n            throw new Error('Oops! Try a different API key!')\n          }\n        })\n        .then(({ data }) => {\n          setError(undefined)\n          setRepositories(data)\n        })\n        .catch((error) => {\n          setError(error)\n        })\n        .finally(() => {\n          setIsFetching(false)\n        })\n    }\n  }\n\n  const handleSubmit = () => {\n    const { apiKey } = formData\n    fetchRepos(apiKey)\n  }\n\n  const handleClear = () => {\n    setFormData(initialFormData)\n    setRepositories({})\n    setSelectedRepo({})\n    setIssues(undefined)\n    setError(undefined)\n    setIsFetching(false)\n    localStorage.removeItem('cachedState')\n  }\n\n  useEffect(() => {\n    const cachedState = window.localStorage.getItem('cachedState')\n    if (cachedState !== 'undefined' && cachedState !== null) {\n      const state = JSON.parse(cachedState)\n      setFormData(state.formData)\n      setRepositories(state.repositories)\n      setSelectedRepo(state.selectedRepo)\n      setIssues(state.issues)\n    }\n  }, []);\n\n  useEffect(() => {\n    const state = {\n      formData,\n      repositories,\n      selectedRepo,\n      issues\n    }\n    if (issues !== undefined) {\n      window.localStorage.setItem('cachedState', JSON.stringify(state));\n    }\n  }, [issues, formData, repositories, selectedRepo]);\n\n  useEffect(() => {\n    fetchRepos()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Form\n        formData={formData}\n        setFormData={setFormData}\n        handleSubmit={handleSubmit}\n        handleClear={handleClear}\n        error={error}\n      />  \n      { isFetching ?\n          <Spinner />\n          : \n          <div className=\"content-container\">\n            <div className=\"content-row\">\n              <div className=\"content-left\">\n                <Repositories\n                  formData={formData}\n                  repositories={repositories}\n                  setIssues={setIssues}\n                  selectedRepo={selectedRepo}\n                  setSelectedRepo={setSelectedRepo}\n                />\n              </div>\n              <div className=\"content-right\">\n                <Issues issues={issues} setIssues={setIssues} />\n              </div>\n            </div>\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}